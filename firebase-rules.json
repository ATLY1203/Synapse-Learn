{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth.uid === $uid",
        ".write": "auth.uid === $uid",
        ".validate": "newData.hasChildren(['email', 'role', 'createdAt', 'lastLogin'])"
      }
    },
    "textbooks": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'",
      "$bookId": {
        ".validate": "newData.hasChildren(['title', 'description', 'form', 'stream', 'coverUrl', 'pdfPath'])"
      }
    },
    "progress": {
      "$progressId": {
        ".read": "auth != null && data.child('userId').val() === auth.uid",
        ".write": "auth != null && newData.child('userId').val() === auth.uid",
        ".validate": "newData.hasChildren(['userId', 'subject', 'completion', 'lastAccessed'])"
      }
    },
    "notes": {
      "$userId": {
        "$bookId": {
          ".read": "auth.uid === $userId",
          ".write": "auth.uid === $userId",
          ".validate": "newData.hasChildren(['pageNumber', 'content', 'timestamp'])"
        }
      }
    },
    "bookmarks": {
      "$userId": {
        ".read": "auth.uid === $userId",
        ".write": "auth.uid === $userId",
        "$bookId": {
          ".validate": "newData.isNumber()"
        }
      }
    },
    "readingStats": {
      "$userId": {
        ".read": "auth.uid === $userId",
        ".write": "auth.uid === $userId",
        "$bookId": {
          ".validate": "newData.hasChildren(['totalTime', 'lastPage', 'lastAccessed'])"
        }
      }
    }
  }
}
